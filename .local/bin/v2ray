#!/bin/bash
help() {
    echo Usage:
    echo -e "\t" v2ray help
    # echo -e "\t" v2ray config : edit config.json
    echo -e "\t" v2ray start : start the v2ray service
    echo -e "\t" v2ray restart : start the v2ray service
    echo -e "\t" v2ray stop : stop the v2ray service
    echo -e "\t" v2ray status : show status
    echo -e "\t" v2ray config : config v2ray
    echo -e "\t" v2ray upgrade : upgrade v2ray from internet
}

upgrade() {
    v2ray=`systemctl status v2ray | awk '/Active:/ {print $2}'`
    [ $v2ray = "inactive" ] && echo "V2ray is not active, starting v2ray......" && sudo systemctl start v2ray.service && sleep 1
    listen=`sed -n '/inbounds/,/outbounds/p' /etc/v2ray/config.json | awk -F':' '/listen/{print $2; exit}' | sed 's/"//g;s/,//g;s/ //g' `
    port=`sed -n '/inbounds/,/outbounds/p' /etc/v2ray/config.json | awk -F':' '/port/{print $2; exit}' | sed 's/"//g;s/,//g;s/ //g' `
    # echo "./go.sh -p socks5://$listen:$port"
    proxy="socks5://$listen:$port"
    download=`mktemp -d`
    echo "curl -L https://install.direct/go.sh"
    curl -L https://install.direct/go.sh --socks5 $proxy > $download/go.sh
    echo "sudo bash go.sh"
    sudo bash $download/go.sh -p $proxy
    echo "remove go.sh"
    rm -r $download
}

if [ $# == 0 ];then
    help
elif [ $1 == "help" ];then
    help
elif [ $1 == "status" ];then
    systemctl status v2ray.service
elif [ $1 == "start" ];then
    sudo systemctl start v2ray.service
elif [ $1 == "restart" ];then
    sudo systemctl restart v2ray.service
elif [ $1 == "stop" ];then
    sudo systemctl stop v2ray.service
elif [ $1 == "config" ];then
    sudo vim /etc/v2ray/config.json
    sudo systemctl restart v2ray.service
elif [ $1 == "upgrade" ];then
    upgrade
else
    help
fi
